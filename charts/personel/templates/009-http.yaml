kind: Deployment
apiVersion: apps/v1
metadata:
  name: nodejs-http
  labels:
    k8s-app: nodejs-http
spec:
  selector:
    matchLabels:
      k8s-app: nodejs-http
  template:
    metadata:
      name: nodejs-http
      labels:
        k8s-app: nodejs-http
    spec:
      containers:
        - name: nodejs-http
          image: {{ .Values.worker.httpImage }}
          env:
            - name: PORT
              value: '8080'
            - name: AMQP
              value: 'amqp://guest:guest@rabbit:5672/'
            - name: HOSTS
              value: |
                {
                  "{{ .Values.worker.host }}": "personel"
                }
      imagePullSecrets:
        - name: regcred
---
kind: Service
apiVersion: v1
metadata:
  name: nodejs-http
  labels:
    k8s-app: nodejs-http
spec:
  ports:
    - name: nodejs-port
      protocol: TCP
      port: 8080
      targetPort: 8080
  selector:
    k8s-app: nodejs-http
  type: ClusterIP
  sessionAffinity: None
---
kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: nodejs-http-ingress
  annotations:
    {{- if .Values.worker.sslIssuer }}
    cert-manager.io/issuer: {{ .Values.worker.sslIssuer }}
    {{- end }}
    {{- if .Values.worker.sslClusterIssuer }}
    cert-manager.io/cluster-issuer: {{ .Values.worker.sslClusterIssuer }}
    {{- end }}
    nginx.ingress.kubernetes.io/proxy-read-timeout: '600'
    nginx.ingress.kubernetes.io/server-snippet: |
      gunzip on;
      gzip on;
      gzip_vary on;
      gzip_proxied any;
      gzip_comp_level 5;
      gzip_min_length 512;
      gzip_buffers 16 128k;
      gzip_types *;
    nginx.ingress.kubernetes.io/proxy-body-size: '30m'
spec:
  ingressClassName: {{ .Values.ingressNginx.class }}
  tls:
    - hosts:
        - {{ .Values.worker.host }}
      secretName: {{ .Values.worker.tlsSecretName | default "nodejs4001-cert" }}
  rules:
    - host: {{ .Values.worker.host }}
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: nodejs-http
                port:
                  number: 8080
