{{ if .Values.onlineBooking.install }}
kind: Deployment
apiVersion: apps/v1
metadata:
  name: online-booking
  labels:
    k8s-app: online-booking
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: online-booking
  template:
    metadata:
      name: online-booking
      labels:
        k8s-app: online-booking
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/017.0-online-booking-config.yaml") . | sha256sum }}
    spec:
      volumes:
        - name: endpoints
          configMap:
            name: online-booking-endpoints
            defaultMode: 420
      containers:
        - name: online-booking
          image: {{ .Values.onlineBooking.image }}
          resources: {}
          volumeMounts:
            - name: endpoints
              mountPath: /usr/share/nginx/html/app/assets/endpoints.json
              subPath: endpoints.json
          readinessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 10
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      imagePullSecrets:
        - name: regcred
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
---
kind: Service
apiVersion: v1
metadata:
  name: online-booking
  labels:
    k8s-app: online-booking
spec:
  ports:
    - name: online-booking-port
      protocol: TCP
      port: 8080
      targetPort: 8080
  selector:
    k8s-app: online-booking
  type: ClusterIP
  sessionAffinity: None
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack
  internalTrafficPolicy: Cluster
---
kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: online-booking-ingress
  annotations:
    {{- if .Values.onlineBooking.sslIssuer }}
    cert-manager.io/issuer: {{ .Values.onlineBooking.sslIssuer }}
    {{- end }}
    {{- if .Values.onlineBooking.sslClusterIssuer }}
    cert-manager.io/cluster-issuer: {{ .Values.onlineBooking.sslClusterIssuer }}
    {{- end }}
spec:
  ingressClassName: {{ .Values.ingressNginx.class }}
  tls:
    - hosts:
        - {{ .Values.onlineBooking.host }}
      secretName: {{ .Values.onlineBooking.tlsSecretName | default "onlinebooking-cert" }}
  rules:
    - host: {{ .Values.onlineBooking.host }}
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: online-booking
                port:
                  number: 8080
  {{ end }}
