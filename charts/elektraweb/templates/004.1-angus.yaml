{{ if .Values.angus.install }}
kind: Deployment
apiVersion: apps/v1
metadata:
  name: angus
  namespace: default
  labels:
    k8s-app: angus
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: angus
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/004.0-angus-endpoint.yaml") . | sha256sum }}
      name: angus
      labels:
        k8s-app: angus
    spec:
      volumes:
        - name: endpoints
          configMap:
              name: angus-endpoints
      containers:
        - name: angus
          image: {{ .Values.angus.image }}
          volumeMounts:
            - name: endpoints
              mountPath: /usr/share/nginx/html/assets/endpoints-client.json
              subPath: endpoints-client.json
          readinessProbe:
            tcpSocket:
              port: 80
            initialDelaySeconds: 10
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
      imagePullSecrets:
        - name: regcred
---
kind: Service
apiVersion: v1
metadata:
  name: angus
  namespace: default
  labels:
    k8s-app: angus
spec:
  ports:
    - name: angus-port
      protocol: TCP
      port: 80
      targetPort: 80
  selector:
    k8s-app: angus
  type: ClusterIP
  sessionAffinity: None
---
kind: Ingress
apiVersion: networking.k8s.io/v1beta1
metadata:
  name: angus-ingress
  namespace: default
  annotations:
    kubernetes.io/ingress.class: {{ .Values.ingressNginx.class }}
    {{ if .Values.certManager.install }}
    {{ if .Values.certManager.letsencrypt.staging }}
    cert-manager.io/issuer: letsencrypt-staging
    {{ else }}
    cert-manager.io/issuer: letsencrypt-prod
    {{ end }}
    {{ end }}
    nginx.ingress.kubernetes.io/ssl-redirect: 'false'
spec:
  tls:
    - hosts:
        - {{ .Values.angus.host }}
      secretName: elektraweb-cert
  rules:
    - host: {{ .Values.angus.host }}
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              serviceName: angus
              servicePort: 80
{{ end }}
